[{"C:\\Repositories\\aria\\src\\index.js":"1","C:\\Repositories\\aria\\src\\App.js":"2","C:\\Repositories\\aria\\src\\Components\\Messages.js":"3","C:\\Repositories\\aria\\src\\Components\\Scraper\\index.js":"4","C:\\Repositories\\aria\\src\\Components\\Modal\\index.js":"5"},{"size":228,"mtime":1613788201803,"results":"6","hashOfConfig":"7"},{"size":5815,"mtime":1614035835735,"results":"8","hashOfConfig":"7"},{"size":821,"mtime":1614033047024,"results":"9","hashOfConfig":"7"},{"size":217,"mtime":1613792168709,"results":"10","hashOfConfig":"7"},{"size":636,"mtime":1614034964223,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"r1bdey",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Repositories\\aria\\src\\index.js",[],["25","26"],"C:\\Repositories\\aria\\src\\App.js",["27"],"import React, { useEffect, useState } from \"react\";\nimport Speech from 'speak-tts' \nimport \"./styles.css\";\nimport { renderMessages } from \"./Components/Messages.js\"\nimport { FaMicrophone, FaMicrophoneSlash, FaPaperPlane, FaEllipsisV, FaChevronRight } from 'react-icons/fa';\nimport styled, { keyframes } from 'styled-components';\nimport { zoomIn, zoomOut } from 'react-animations';\nimport Modal from \"./Components/Modal\";\n\nif ('webkitSpeechRecognition' in window) {\n  // eslint-disable-next-line no-undef\n  var sprecog = new webkitSpeechRecognition();\n} else {\n  alert(\"Erro: Infelizmente este aplicativo está atualmente funcionando apenas em navegadores Google Chrome ou derivados. :(\")\n}\nconst MicrophoneSlashFade = styled(FaMicrophoneSlash)`\n  animation: 0.2s ${keyframes`${zoomIn}`};\n`\nconst MicrophoneFade = styled(FaMicrophone)`\n  animation: 0.2s ${keyframes`${zoomOut}`};\n`\n\nconst defaultConfig = {\n  lang: \"pt-BR\",\n  continuous: false,\n  immediateVoiceSend: true,\n  tts: true,\n  visible: true,\n}\n\nexport default function App() {\n  const [config, setConfig] = useState(defaultConfig)\n  const [state, setState] = useState(\"off\")\n  const [messages, setMessage] = useState([])\n  const [msgCount, setCount] = useState(0);\n\n  useEffect(() => {\n    respond(\"Olá!\");\n  }, []);\n\n  const voice = config.tts ? new Speech() : null;\n  sprecog.interimResults = true;\n  sprecog.lang = config.lang;\n  sprecog.continuous = config.continuous;\n\n  voice && voice.init({\n    'volume': 1,\n      'lang': 'pt-BR',\n      'rate': 1,\n      'pitch': 0.9,\n      'voice':'Google português do Brasil',\n  }).catch(e => {\n    alert(\"Ocorreu um erro ao inicializar o TTS : \", e)\n  })\n\n  // function updateScroll(){\n  //   try {\n  //     var element = document.getElementsByClassName(\"messagebox\")[0];\n  //     console.log(\"scrollTop\", element.scrollTop);\n  //     console.log(\"scrollHeight\", element.scrollHeight);\n  //     element.scrollTop = 99999;\n  //   } catch(e){\n  //     console.log(e);\n  //   }\n  // }\n\n  function addMessage(e) {\n    setCount(msgCount + 1);\n    if (e !== \"\") {\n      var newMessages = messages;\n      newMessages.push({id: messages.index + 1, sender: \"User\", message: e})\n      setMessage(newMessages);\n      if (state === \"on\") {\n        sprecog.stop()\n        setState(\"off\")\n      }\n      document.getElementById(\"input\").placeholder = \"Diga algo!\";\n    } else {\n      document.getElementById(\"input\").placeholder = \"Você precisa digitar algo!\";\n    }\n  }\n\n  function respond(e) {\n    voice && voice.speak({\n      text: e,\n    })\n    setCount(msgCount + 1);\n    if (e !== \"\") {\n      var newMessages = messages;\n      newMessages.push({id: messages.index + 1, sender: \"Aria\", message: e})\n      setMessage(newMessages);\n      if (state === \"on\") {\n        sprecog.stop()\n        setState(\"off\")\n      }\n    } else {\n      alert(\"Erro na resposta!\");\n    }\n  }\n  sprecog.onresult = function(event) {\n    for (let i = event.resultIndex; i < event.results.length; i++) {\n      if (event.results[i].isFinal) {\n        const content = event.results[i][0].transcript.trim();\n        config.immediateVoiceSend\n        ? addMessage(content)\n        : document.getElementById(\"input\").value = document.getElementById(\"input\").value + \" \" + content; cycleAi()\n      }\n    }\n  };\n  \n  function cycleAi() {\n    if (state === \"off\") {\n      sprecog.abort()\n      sprecog.start()\n      setState(\"on\")\n    } else {\n      sprecog.stop()\n      setState(\"off\")\n    }\n  }\n\n  function openConfig() {\n    setConfig(prevState => {\n      return {...prevState, visible: !config.visible};\n    });\n  }\n\n  function saveChanges(e) {\n    e.preventDefault();\n    console.log(\"Config: \", e.target);\n    openConfig();\n  }\n\n  // lang: \"pt-BR\",\n  // continuous: false,\n  // immediateVoiceSend: true,\n  // tts: false,\n  const configBody = \n    <form onSubmit={(e) => saveChanges(e)}>\n      <p>\n        Voz da Aria: \n        <input className=\"configOption\" type=\"checkbox\" defaultChecked={config.tts}/>\n      </p>\n\n      <p style={{color: !config.tts ? \"grey\" : null}}>\n        Idioma da Voz da Aria: <br/>\n        <select disabled={!config.tts} className=\"langInput\" name=\"lang\" defaultValue={config.lang}>\n          <option value=\"pt-BR\">Português Brasileiro</option>\n          <option value=\"en-US\">Inglês</option>\n          <option value=\"pt-BR\">Português Brasileiro</option>\n        </select>\n      </p>\n      <p>\n        Mensagem de voz rápida: \n        <input className=\"configOption\" type=\"checkbox\" defaultValue={config.immediateVoiceSend} />\n      </p>\n      \n      <p>\n        Linguagem: \n        <input className=\"configOption\" type=\"checkbox\" />\n      </p>\n      \n      <input className=\"configOption\" type=\"submit\" value=\"Salvar alterações\"/>\n    </form>\n\n  return (\n    <div className=\"App\">\n        <div className=\"chatbox\">\n          <Modal\n            header=\"Configurações\"\n            body={configBody}\n            footer={<FaChevronRight id=\"configicon\" onClick={openConfig} />}\n            visible={config.visible}\n          />\n          <div id=\"chatHeader\">\n            <img src=\"https://i.imgur.com/XWnne0i_d.webp?maxwidth=760&fidelity=grand\" alt=\"Imagem da Arai\"/>\n            <p>Aria</p>\n          <FaEllipsisV id=\"configicon\" onClick={openConfig} />\n          </div>\n          {renderMessages(messages)}\n          <form autoComplete=\"off\" onSubmit={(e) => {e.preventDefault(); addMessage(e.target.input.value); e.target.input.value = \"\"}}>\n            <input id=\"input\" placeholder=\"Diga algo!\"/>\n            {state === \"off\" ? <MicrophoneSlashFade id=\"microphone\" onClick={cycleAi}/> : <MicrophoneFade id=\"microphoneOn\" onClick={cycleAi}/>}\n            <input id=\"send\" type=\"submit\"/>\n            <FaPaperPlane id=\"sendicon\" type=\"submit\" />\n          </form>\n        </div>\n        <br/>\n    </div>\n  );\n}\n","C:\\Repositories\\aria\\src\\Components\\Messages.js",[],"C:\\Repositories\\aria\\src\\Components\\Scraper\\index.js",[],["28","29"],"C:\\Repositories\\aria\\src\\Components\\Modal\\index.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":39,"column":6,"nodeType":"36","endLine":39,"endColumn":8,"suggestions":"37"},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'respond'. Either include it or remove the dependency array.","ArrayExpression",["42"],["40"],["41"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [respond]",{"range":"45","text":"46"},[1271,1273],"[respond]"]